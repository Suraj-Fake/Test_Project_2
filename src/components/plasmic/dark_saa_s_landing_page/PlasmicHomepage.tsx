// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6sLF4jL9fG9cRZGNCHJDct
// Component: f-Bg79oXGSI4

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: mmVyVDUOP1mW/component
import Button from "../../Button"; // plasmic-import: IJxXxfpIqlWa/component
import Section from "../../Section"; // plasmic-import: ftzlsPZ8TRwE/component
import DiagramCard from "../../DiagramCard"; // plasmic-import: RzyFPKRdWXe9/component
import ProductCard from "../../ProductCard"; // plasmic-import: wOfZ3aO2NKVB/component
import DetailAbout from "../../DetailAbout"; // plasmic-import: rOTxkK6IxvJV/component
import PriceSection from "../../PriceSection"; // plasmic-import: w17PIyjbmmf8/component
import PriceCard from "../../PriceCard"; // plasmic-import: LtAntJGw-RtW/component
import FooterSection from "../../FooterSection"; // plasmic-import: 4hxZNrh6Brv5/component

import { useScreenVariants as useScreenVariantssvfCne9I6Cxu } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: SVFCne9i6CXU/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_dark_saa_s_landing_page.module.css"; // plasmic-import: 6sLF4jL9fG9cRZGNCHJDct/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: f-Bg79oXGSI4/css

import IconArrowRightsvgIcon from "./icons/PlasmicIcon__IconArrowRightsvg"; // plasmic-import: pJsg4Ol9FU3O/icon
import diagramsvg7FrKs8FbWyaw from "./images/diagramsvg.svg"; // plasmic-import: 7FrKS8FbWyaw/picture
import logoHero1PngUxbWi0YqnK0Y from "./images/logoHero1Png.png"; // plasmic-import: UxbWi0YqnK0Y/picture
import logoHero2PngEMjebh33Irtv from "./images/logoHero2Png.png"; // plasmic-import: eMjebh33Irtv/picture
import logoHero3PngZ0Fstao90F0 from "./images/logoHero3Png.png"; // plasmic-import: Z0FSTAO90F0_/picture
import logoHero4PngDibcEbgYmeQ from "./images/logoHero4Png.png"; // plasmic-import: DIBCEbg-YmeQ/picture
import diagramImgsvgOvdgreguzREi from "./images/diagramImgsvg.svg"; // plasmic-import: ovdgreguzREi/picture
import ellipseLeftpngPv66Ukp8VraC from "./images/ellipseLeftpng.png"; // plasmic-import: PV66Ukp8VraC/picture
import ellipseRightpngEg0I9AJhbsu5 from "./images/ellipseRightpng.png"; // plasmic-import: Eg0i9aJHBSU5/picture
import terminalpngJLquAi87C3Y from "./images/terminalpng.png"; // plasmic-import: JLquAI8_7C3Y/picture
import line1PngYIkVBowU3G8O from "./images/line1Png.png"; // plasmic-import: yIkVBowU3g8O/picture
import lineBranchpng4F4UlFdcXOg from "./images/lineBranchpng.png"; // plasmic-import: 4F4ULFdcX_Og/picture
import line2PngBKaMArSqJtZg from "./images/line2Png.png"; // plasmic-import: BKaMArSqJtZg/picture
import dollarpngD3HWg8YXwKt from "./images/dollarpng.png"; // plasmic-import: D3HWg-8yXWKt/picture
import messagepngIAyl97ASyHjm from "./images/messagepng.png"; // plasmic-import: IAyl97aSyHjm/picture
import importpngNsQc43Z1ZbVk from "./images/importpng.png"; // plasmic-import: NSQc43Z1zbVk/picture
import exportpngR7JAj2WtjLgw from "./images/exportpng.png"; // plasmic-import: R7JAj2WtjLgw/picture
import message2Png3UhfeYWsFXzj from "./images/message2Png.png"; // plasmic-import: 3UhfeYWsFXzj/picture
import message3PngZibmeiOySiNs from "./images/message3Png.png"; // plasmic-import: ZibmeiOYSiNS/picture
import macbookpngGuzd5Yga4PX from "./images/macbookpng.png"; // plasmic-import: guzd5YGA4P_X/picture
import galleri11PngIQmdLuw7UHd from "./images/galleri11Png.png"; // plasmic-import: iQmdLuw7u-hd/picture
import galleri12PngKdmSpy7Q8LUy from "./images/galleri12Png.png"; // plasmic-import: KdmSpy7Q8lUy/picture
import galleri13PngZf2WImWmeFeF from "./images/galleri13Png.png"; // plasmic-import: Zf2wIMWmeFeF/picture
import galleri21Png8VeffXeArjrz from "./images/galleri21Png.png"; // plasmic-import: 8VEFFXeARJRZ/picture
import galleri22PngJY0CkKc33WZq from "./images/galleri22Png.png"; // plasmic-import: jY0CkKc33wZq/picture
import galleri23PngAwFfVQqJqiE from "./images/galleri23Png.png"; // plasmic-import: AW_ffVQqJqiE/picture
import aboutImgpngOhRthaMfiDks from "./images/aboutImgpng.png"; // plasmic-import: ohRthaMfiDks/picture
import aboutIpsumpngEyLqHaKsrVmV from "./images/aboutIpsumpng.png"; // plasmic-import: EyLQHaKsrVmV/picture
import backtippngJJniJ6WRrU3 from "./images/backtippng.png"; // plasmic-import: J_JniJ6WRrU3/picture
import arrowLeftpng6WOzgQUgjEt from "./images/arrowLeftpng.png"; // plasmic-import: 6WOzgQ_UgjEt/picture
import arrowRightpng2YZlejuy89BSj from "./images/arrowRightpng2.png"; // plasmic-import: yZlejuy89BSj/picture
import pricingImgsvgHYnqhxHdOtzi from "./images/pricingImgsvg.svg"; // plasmic-import: hYNQHXHdOTZI/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  h1?: p.Flex<"h1">;
  diagramSection?: p.Flex<typeof Section>;
  deviceSection?: p.Flex<typeof Section>;
  gallerySection?: p.Flex<typeof Section>;
  productSection?: p.Flex<typeof Section>;
  aboutSection?: p.Flex<typeof Section>;
  priceSection?: p.Flex<typeof PriceSection>;
  startSection?: p.Flex<typeof Section>;
  h3?: p.Flex<"h3">;
  pricingSection?: p.Flex<typeof Section>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {
  className?: string;
}

const $$ = {};

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantssvfCne9I6Cxu()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__b3RtE)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yjtyj)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__rueuO)}>
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Analytics for developers can be better"
                      : "Analytics for \ndevelopers can\nbe better"}
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lcWyg
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                      : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                  </div>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__r3O)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___1INmu
                      )}
                      color={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "blueSmall"
                          : "blue"
                      }
                      endIcon={
                        <IconArrowRightsvgIcon
                          className={classNames(projectcss.all, sty.svg__xbtJd)}
                          role={"img"}
                        />
                      }
                      link={"#"}
                      showEndIcon={true}
                      startIcon={
                        <svg
                          className={classNames(projectcss.all, sty.svg__dsAtL)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gY0EM
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Try Demo For Free"
                          : "Try Demo For Free"}
                      </div>
                    </Button>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ogTnj
                      )}
                      color={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "blueBorderSmall"
                          : "blueBorder"
                      }
                      endIcon={
                        <svg
                          className={classNames(projectcss.all, sty.svg__ao2UZ)}
                          role={"img"}
                        />
                      }
                      link={"#"}
                      startIcon={
                        <svg
                          className={classNames(projectcss.all, sty.svg__kcPak)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kcg2B
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Learn More"
                          : "Learn More"}
                      </div>
                    </Button>
                  </p.Stack>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : false
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qgbJ)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__moc58
                        )}
                        color={"blueBorder"}
                        endIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__nbMxF
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__rnsFi
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        {"Learn More"}
                      </Button>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__bDzSg
                        )}
                        color={"blueBorder"}
                        endIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__gkIRx
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg___7UBo4
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        {"Learn More"}
                      </Button>
                    </div>
                  ) : null}
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___061Hb)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jxBt9)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "0px"
                        : "661px"
                    }
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "100%"
                    }
                    loading={"lazy"}
                    src={{
                      src: diagramsvg7FrKs8FbWyaw,
                      fullWidth: 173,
                      fullHeight: 150,
                      aspectRatio: 1.151631
                    }}
                  />
                </div>
              </p.Stack>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oDaQ
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Powering with magnificant of Companies"
                  : "Powering with magnificant of Companies"}
              </div>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___86OGd)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hEaa4)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "170px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: logoHero1PngUxbWi0YqnK0Y,
                    fullWidth: 233,
                    fullHeight: 50,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___1TDS)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "170px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: logoHero2PngEMjebh33Irtv,
                    fullWidth: 189,
                    fullHeight: 50,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mxr61)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "170px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: logoHero3PngZ0Fstao90F0,
                    fullWidth: 194,
                    fullHeight: 50,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__oSIxG)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "170px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: logoHero4PngDibcEbgYmeQ,
                    fullWidth: 189,
                    fullHeight: 50,
                    aspectRatio: undefined
                  }}
                />
              </p.Stack>
            </div>
          </p.Stack>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__pNq34)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: diagramImgsvgOvdgreguzREi,
              fullWidth: 300,
              fullHeight: 100,
              aspectRatio: 2.987552
            }}
          />

          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__xojig)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"774px"}
            loading={"lazy"}
            src={{
              src: ellipseLeftpngPv66Ukp8VraC,
              fullWidth: 469,
              fullHeight: 742,
              aspectRatio: undefined
            }}
          />

          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__ptDzp)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: ellipseRightpngEg0I9AJhbsu5,
              fullWidth: 437,
              fullHeight: 742,
              aspectRatio: undefined
            }}
          />

          <Section
            data-plasmic-name={"diagramSection"}
            data-plasmic-override={overrides.diagramSection}
            className={classNames("__wab_instance", sty.diagramSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox___1QoSg)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__vFxQq
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor \nsit amet"
                  : "Lorem ipsum dolor \nsit amet"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dpC8Q
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                  : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
              </div>
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__vxPu2)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "249px"
                    : "100%"
                }
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: terminalpngJLquAi87C3Y,
                  fullWidth: 624,
                  fullHeight: 333,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__mYgoE)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "auto"
                    : "auto"
                }
                loading={"lazy"}
                src={{
                  src: line1PngYIkVBowU3G8O,
                  fullWidth: 11,
                  fullHeight: 150,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___6Zc1)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "50px"
                    : "100%"
                }
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: lineBranchpng4F4UlFdcXOg,
                  fullWidth: 100,
                  fullHeight: 100,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__r4OMa)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "auto"
                    : "auto"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "500px"
                    : "770px"
                }
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "auto"
                    : "auto"
                }
                loading={"lazy"}
                src={{
                  src: line2PngBKaMArSqJtZg,
                  fullWidth: 844,
                  fullHeight: 284,
                  aspectRatio: undefined
                }}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__p1VP)}
              >
                <DiagramCard
                  className={classNames(
                    "__wab_instance",
                    sty.diagramCard___0C4HN
                  )}
                />

                <DiagramCard
                  className={classNames(
                    "__wab_instance",
                    sty.diagramCard__zuBBq
                  )}
                />

                <DiagramCard
                  className={classNames(
                    "__wab_instance",
                    sty.diagramCard__c7Q91
                  )}
                />
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___0AEr)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___7NjMr)}
                  displayHeight={"auto"}
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: dollarpngD3HWg8YXwKt,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__r8Si)}
                  displayHeight={"auto"}
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: messagepngIAyl97ASyHjm,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__adSzs)}
                  displayHeight={"auto"}
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: importpngNsQc43Z1ZbVk,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__iGmAw)}
                  displayHeight={"auto"}
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: lineBranchpng4F4UlFdcXOg,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__efzO)}
                  displayHeight={"auto"}
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: exportpngR7JAj2WtjLgw,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ol2Ei)}
                  displayHeight={"auto"}
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: message2Png3UhfeYWsFXzj,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__bXi1)}
                  displayHeight={"auto"}
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "72px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: message3PngZibmeiOySiNs,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />
              </p.Stack>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__cIx8H
                )}
              >
                {"Lorem ipsum dolor \nsit amet"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yvA0G
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                }
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"deviceSection"}
            data-plasmic-override={overrides.deviceSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.deviceSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__f5Shn)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__lyo3I
                )}
              >
                {"Lorem ipsum dolor sit amet"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__k0Az6
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                  : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."}
              </div>
            </div>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__vpplg)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "360px"
                  : "100%"
              }
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: macbookpngGuzd5Yga4PX,
                fullWidth: 900,
                fullHeight: 565,
                aspectRatio: undefined
              }}
            />
          </Section>
          <Section
            data-plasmic-name={"gallerySection"}
            data-plasmic-override={overrides.gallerySection}
            className={classNames("__wab_instance", sty.gallerySection)}
            size={"fullContentGallery"}
          >
            <div className={classNames(projectcss.all, sty.freeBox__yf5UK)}>
              <div className={classNames(projectcss.all, sty.columns__fPi3)}>
                <div className={classNames(projectcss.all, sty.column__d8GiA)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___0C6KB)}
                    displayHeight={"100%"}
                    displayMaxHeight={"300px"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: galleri11PngIQmdLuw7UHd,
                      fullWidth: 700,
                      fullHeight: 300,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__m2JHf)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__r6M5T)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: galleri12PngKdmSpy7Q8LUy,
                      fullWidth: 700,
                      fullHeight: 300,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__aQqfg)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__eq0AZ)}
                    displayHeight={"100%"}
                    displayMaxHeight={"300px"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: galleri13PngZf2WImWmeFeF,
                      fullWidth: 700,
                      fullHeight: 300,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.columns__lBkAk)}>
                <div className={classNames(projectcss.all, sty.column__dQuOq)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__d5K0)}
                    displayHeight={"100%"}
                    displayMaxHeight={"300px"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: galleri21Png8VeffXeArjrz,
                      fullWidth: 700,
                      fullHeight: 300,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__sf4GW)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ufSeT)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: galleri22PngJY0CkKc33WZq,
                      fullWidth: 700,
                      fullHeight: 300,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__xOi4N)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___7ET44)}
                    displayHeight={"100%"}
                    displayMaxHeight={"300px"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: galleri23PngAwFfVQqJqiE,
                      fullWidth: 700,
                      fullHeight: 300,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"productSection"}
            data-plasmic-override={overrides.productSection}
            className={classNames("__wab_instance", sty.productSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__vcKy2)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__leEGf
                )}
              >
                {"Lorem ipsum dolor sit amet"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xd9Tb
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                }
              </div>
              <Button
                className={classNames("__wab_instance", sty.button___0RXsy)}
                color={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "blue"
                    : "blue"
                }
                endIcon={
                  <svg
                    className={classNames(projectcss.all, sty.svg__o9LXu)}
                    role={"img"}
                  />
                }
                link={"#"}
                startIcon={
                  <svg
                    className={classNames(projectcss.all, sty.svg__wAtkB)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__czwDz
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Get Started"
                    : "Get Started"}
                </div>
              </Button>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qEfBn)}
              >
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__jnJl0
                  )}
                />

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__rCrAq
                  )}
                />
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__goVmR)}
              >
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__fc2Jk
                  )}
                />

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__cg1Yg
                  )}
                />
              </p.Stack>
            </div>
          </Section>
          <Section
            data-plasmic-name={"aboutSection"}
            data-plasmic-override={overrides.aboutSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.aboutSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__tXSw)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__ap78V
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "What people say \nabout us"
                  : "What people say about us"}
              </h2>
              <div className={classNames(projectcss.all, sty.freeBox___4IlAm)}>
                <div className={classNames(projectcss.all, sty.freeBox__kurK)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___92OTd)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "339px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: aboutImgpngOhRthaMfiDks,
                      fullWidth: 400,
                      fullHeight: 500,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ry1Pj)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__cysY2
                    )}
                  >
                    {"Michael Justin"}
                  </h2>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___9Cqw)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tLSeW)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: aboutIpsumpngEyLqHaKsrVmV,
                        fullWidth: 152,
                        fullHeight: 40,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ektA
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "CEO Company"
                        : "CEO Company"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___70Xt6)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__fxOzL)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: backtippngJJniJ6WRrU3,
                        fullWidth: 34,
                        fullHeight: 32,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hPkFf
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                      : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                  </div>
                </div>
              </div>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6FmL)}
              >
                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout___8IjR
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__m8SK7
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout___5Cd9X
                  )}
                />
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6Vxz)}
              >
                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__wsAl1
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__iWr4O
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__e6EN
                  )}
                />
              </p.Stack>
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__fgKtw)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: arrowLeftpng6WOzgQUgjEt,
                  fullWidth: 24,
                  fullHeight: 24,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__lxTd2)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: arrowRightpng2YZlejuy89BSj,
                  fullWidth: 24,
                  fullHeight: 24,
                  aspectRatio: undefined
                }}
              />
            </div>
          </Section>
          <PriceSection
            data-plasmic-name={"priceSection"}
            data-plasmic-override={overrides.priceSection}
            className={classNames("__wab_instance", sty.priceSection)}
          />

          <Section
            data-plasmic-name={"startSection"}
            data-plasmic-override={overrides.startSection}
            className={classNames("__wab_instance", sty.startSection)}
            size={"fullContentWidth"}
          >
            <div className={classNames(projectcss.all, sty.freeBox__djd6H)}>
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__bAf5)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: pricingImgsvgHYnqhxHdOtzi,
                  fullWidth: 300,
                  fullHeight: 67,
                  aspectRatio: 4.468401
                }}
              />

              <div className={classNames(projectcss.all, sty.columns__c9RiA)}>
                <div className={classNames(projectcss.all, sty.column__tG0Q3)}>
                  <h3
                    data-plasmic-name={"h3"}
                    data-plasmic-override={overrides.h3}
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Start using our product today"
                      : "Start using our product today"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jQM5
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."
                      : "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__g3REt)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__odS1V)}
                    color={"white"}
                    endIcon={
                      <svg
                        className={classNames(projectcss.all, sty.svg__zcB9S)}
                        role={"img"}
                      />
                    }
                    link={"#"}
                    startIcon={
                      <svg
                        className={classNames(projectcss.all, sty.svg___5Q0Oa)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kGUeX
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Get Started"
                        : "Get Started"}
                    </div>
                  </Button>
                </div>
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__kkJt3)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___6L4Eq)}
              >
                <div className={classNames(projectcss.all, sty.column__ksDe)}>
                  <PriceCard
                    borders={["flatLeft"]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__biEOt
                    )}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__ejcz)}>
                  <PriceCard
                    borders={["flatCenter"]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__zfiU
                    )}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__aMu6A)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Zmxg
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "We Recommended"
                        : "We Recommended"}
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__xiBht)}>
                  <PriceCard
                    borders={["flatRight"]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__axaMq
                    )}
                  />
                </div>
              </p.Stack>
            </div>
          </Section>
          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "h1",
    "diagramSection",
    "deviceSection",
    "gallerySection",
    "productSection",
    "aboutSection",
    "priceSection",
    "startSection",
    "h3",
    "pricingSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar", "h1"],
  navbar: ["navbar"],
  h1: ["h1"],
  diagramSection: ["diagramSection"],
  deviceSection: ["deviceSection"],
  gallerySection: ["gallerySection"],
  productSection: ["productSection"],
  aboutSection: ["aboutSection"],
  priceSection: ["priceSection"],
  startSection: ["startSection", "h3"],
  h3: ["h3"],
  pricingSection: ["pricingSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  h1: "h1";
  diagramSection: typeof Section;
  deviceSection: typeof Section;
  gallerySection: typeof Section;
  productSection: typeof Section;
  aboutSection: typeof Section;
  priceSection: typeof PriceSection;
  startSection: typeof Section;
  h3: "h3";
  pricingSection: typeof Section;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    h1: makeNodeComponent("h1"),
    diagramSection: makeNodeComponent("diagramSection"),
    deviceSection: makeNodeComponent("deviceSection"),
    gallerySection: makeNodeComponent("gallerySection"),
    productSection: makeNodeComponent("productSection"),
    aboutSection: makeNodeComponent("aboutSection"),
    priceSection: makeNodeComponent("priceSection"),
    startSection: makeNodeComponent("startSection"),
    h3: makeNodeComponent("h3"),
    pricingSection: makeNodeComponent("pricingSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
